// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: ui.proto

package sc2proto

import (
	"reflect"
	"sync"

	"google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActionControlGroup_ControlGroupAction int32

const (
	ActionControlGroup_Recall         ActionControlGroup_ControlGroupAction = 1 // Equivalent to number hotkey. Replaces current selection with control group.
	ActionControlGroup_Set            ActionControlGroup_ControlGroupAction = 2 // Equivalent to Control + number hotkey. Sets control group to current selection.
	ActionControlGroup_Append         ActionControlGroup_ControlGroupAction = 3 // Equivalent to Shift + number hotkey. Adds current selection into control group.
	ActionControlGroup_SetAndSteal    ActionControlGroup_ControlGroupAction = 4 // Equivalent to Control + Alt + number hotkey. Sets control group to current selection. Units are removed from other control groups.
	ActionControlGroup_AppendAndSteal ActionControlGroup_ControlGroupAction = 5 // Equivalent to Shift + Alt + number hotkey. Adds current selection into control group. Units are removed from other control groups.
)

// Enum value maps for ActionControlGroup_ControlGroupAction.
var (
	ActionControlGroup_ControlGroupAction_name = map[int32]string{
		1: "Recall",
		2: "Set",
		3: "Append",
		4: "SetAndSteal",
		5: "AppendAndSteal",
	}
	ActionControlGroup_ControlGroupAction_value = map[string]int32{
		"Recall":         1,
		"Set":            2,
		"Append":         3,
		"SetAndSteal":    4,
		"AppendAndSteal": 5,
	}
)

func (x ActionControlGroup_ControlGroupAction) Enum() *ActionControlGroup_ControlGroupAction {
	p := new(ActionControlGroup_ControlGroupAction)
	*p = x
	return p
}

func (x ActionControlGroup_ControlGroupAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionControlGroup_ControlGroupAction) Descriptor() protoreflect.EnumDescriptor {
	return file_ui_proto_enumTypes[0].Descriptor()
}

func (ActionControlGroup_ControlGroupAction) Type() protoreflect.EnumType {
	return &file_ui_proto_enumTypes[0]
}

func (x ActionControlGroup_ControlGroupAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ActionControlGroup_ControlGroupAction) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ActionControlGroup_ControlGroupAction(num)
	return nil
}

// Deprecated: Use ActionControlGroup_ControlGroupAction.Descriptor instead.
func (ActionControlGroup_ControlGroupAction) EnumDescriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{9, 0}
}

type ActionSelectIdleWorker_Type int32

const (
	ActionSelectIdleWorker_Set    ActionSelectIdleWorker_Type = 1 // Equivalent to click with no modifiers. Replaces selection with single idle worker.
	ActionSelectIdleWorker_Add    ActionSelectIdleWorker_Type = 2 // Equivalent to shift+click. Adds single idle worker to current selection.
	ActionSelectIdleWorker_All    ActionSelectIdleWorker_Type = 3 // Equivalent to control+click. Selects all idle workers.
	ActionSelectIdleWorker_AddAll ActionSelectIdleWorker_Type = 4 // Equivalent to shift+control+click. Adds all idle workers to current selection.
)

// Enum value maps for ActionSelectIdleWorker_Type.
var (
	ActionSelectIdleWorker_Type_name = map[int32]string{
		1: "Set",
		2: "Add",
		3: "All",
		4: "AddAll",
	}
	ActionSelectIdleWorker_Type_value = map[string]int32{
		"Set":    1,
		"Add":    2,
		"All":    3,
		"AddAll": 4,
	}
)

func (x ActionSelectIdleWorker_Type) Enum() *ActionSelectIdleWorker_Type {
	p := new(ActionSelectIdleWorker_Type)
	*p = x
	return p
}

func (x ActionSelectIdleWorker_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionSelectIdleWorker_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_ui_proto_enumTypes[1].Descriptor()
}

func (ActionSelectIdleWorker_Type) Type() protoreflect.EnumType {
	return &file_ui_proto_enumTypes[1]
}

func (x ActionSelectIdleWorker_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ActionSelectIdleWorker_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ActionSelectIdleWorker_Type(num)
	return nil
}

// Deprecated: Use ActionSelectIdleWorker_Type.Descriptor instead.
func (ActionSelectIdleWorker_Type) EnumDescriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{13, 0}
}

type ActionMultiPanel_Type int32

const (
	ActionMultiPanel_SingleSelect      ActionMultiPanel_Type = 1 // Click on icon
	ActionMultiPanel_DeselectUnit      ActionMultiPanel_Type = 2 // Shift Click on icon
	ActionMultiPanel_SelectAllOfType   ActionMultiPanel_Type = 3 // Control Click on icon.
	ActionMultiPanel_DeselectAllOfType ActionMultiPanel_Type = 4 // Control+Shift Click on icon.
)

// Enum value maps for ActionMultiPanel_Type.
var (
	ActionMultiPanel_Type_name = map[int32]string{
		1: "SingleSelect",
		2: "DeselectUnit",
		3: "SelectAllOfType",
		4: "DeselectAllOfType",
	}
	ActionMultiPanel_Type_value = map[string]int32{
		"SingleSelect":      1,
		"DeselectUnit":      2,
		"SelectAllOfType":   3,
		"DeselectAllOfType": 4,
	}
)

func (x ActionMultiPanel_Type) Enum() *ActionMultiPanel_Type {
	p := new(ActionMultiPanel_Type)
	*p = x
	return p
}

func (x ActionMultiPanel_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionMultiPanel_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_ui_proto_enumTypes[2].Descriptor()
}

func (ActionMultiPanel_Type) Type() protoreflect.EnumType {
	return &file_ui_proto_enumTypes[2]
}

func (x ActionMultiPanel_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ActionMultiPanel_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ActionMultiPanel_Type(num)
	return nil
}

// Deprecated: Use ActionMultiPanel_Type.Descriptor instead.
func (ActionMultiPanel_Type) EnumDescriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{14, 0}
}

type ObservationUI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*ControlGroup `protobuf:"bytes,1,rep,name=groups" json:"groups,omitempty"`
	// Types that are assignable to Panel:
	//	*ObservationUI_Single
	//	*ObservationUI_Multi
	//	*ObservationUI_Cargo
	//	*ObservationUI_Production
	Panel isObservationUI_Panel `protobuf_oneof:"panel"`
}

func (x *ObservationUI) Reset() {
	*x = ObservationUI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ui_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObservationUI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObservationUI) ProtoMessage() {}

func (x *ObservationUI) ProtoReflect() protoreflect.Message {
	mi := &file_ui_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObservationUI.ProtoReflect.Descriptor instead.
func (*ObservationUI) Descriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{0}
}

func (x *ObservationUI) GetGroups() []*ControlGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (m *ObservationUI) GetPanel() isObservationUI_Panel {
	if m != nil {
		return m.Panel
	}
	return nil
}

func (x *ObservationUI) GetSingle() *SinglePanel {
	if x, ok := x.GetPanel().(*ObservationUI_Single); ok {
		return x.Single
	}
	return nil
}

func (x *ObservationUI) GetMulti() *MultiPanel {
	if x, ok := x.GetPanel().(*ObservationUI_Multi); ok {
		return x.Multi
	}
	return nil
}

func (x *ObservationUI) GetCargo() *CargoPanel {
	if x, ok := x.GetPanel().(*ObservationUI_Cargo); ok {
		return x.Cargo
	}
	return nil
}

func (x *ObservationUI) GetProduction() *ProductionPanel {
	if x, ok := x.GetPanel().(*ObservationUI_Production); ok {
		return x.Production
	}
	return nil
}

type isObservationUI_Panel interface {
	isObservationUI_Panel()
}

type ObservationUI_Single struct {
	Single *SinglePanel `protobuf:"bytes,2,opt,name=single,oneof"`
}

type ObservationUI_Multi struct {
	Multi *MultiPanel `protobuf:"bytes,3,opt,name=multi,oneof"`
}

type ObservationUI_Cargo struct {
	Cargo *CargoPanel `protobuf:"bytes,4,opt,name=cargo,oneof"`
}

type ObservationUI_Production struct {
	Production *ProductionPanel `protobuf:"bytes,5,opt,name=production,oneof"`
}

func (*ObservationUI_Single) isObservationUI_Panel() {}

func (*ObservationUI_Multi) isObservationUI_Panel() {}

func (*ObservationUI_Cargo) isObservationUI_Panel() {}

func (*ObservationUI_Production) isObservationUI_Panel() {}

type ControlGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControlGroupIndex *uint32 `protobuf:"varint,1,opt,name=control_group_index,json=controlGroupIndex" json:"control_group_index,omitempty"`
	LeaderUnitType    *uint32 `protobuf:"varint,2,opt,name=leader_unit_type,json=leaderUnitType" json:"leader_unit_type,omitempty"`
	Count             *uint32 `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
}

func (x *ControlGroup) Reset() {
	*x = ControlGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ui_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlGroup) ProtoMessage() {}

func (x *ControlGroup) ProtoReflect() protoreflect.Message {
	mi := &file_ui_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlGroup.ProtoReflect.Descriptor instead.
func (*ControlGroup) Descriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{1}
}

func (x *ControlGroup) GetControlGroupIndex() uint32 {
	if x != nil && x.ControlGroupIndex != nil {
		return *x.ControlGroupIndex
	}
	return 0
}

func (x *ControlGroup) GetLeaderUnitType() uint32 {
	if x != nil && x.LeaderUnitType != nil {
		return *x.LeaderUnitType
	}
	return 0
}

func (x *ControlGroup) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type UnitInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitType            *uint32   `protobuf:"varint,1,opt,name=unit_type,json=unitType" json:"unit_type,omitempty"`
	PlayerRelative      *uint32   `protobuf:"varint,2,opt,name=player_relative,json=playerRelative" json:"player_relative,omitempty"`
	Health              *int32    `protobuf:"varint,3,opt,name=health" json:"health,omitempty"`
	Shields             *int32    `protobuf:"varint,4,opt,name=shields" json:"shields,omitempty"`
	Energy              *int32    `protobuf:"varint,5,opt,name=energy" json:"energy,omitempty"`
	TransportSlotsTaken *int32    `protobuf:"varint,6,opt,name=transport_slots_taken,json=transportSlotsTaken" json:"transport_slots_taken,omitempty"`
	BuildProgress       *float32  `protobuf:"fixed32,7,opt,name=build_progress,json=buildProgress" json:"build_progress,omitempty"` // Range: [0.0, 1.0]
	AddOn               *UnitInfo `protobuf:"bytes,8,opt,name=add_on,json=addOn" json:"add_on,omitempty"`
	MaxHealth           *int32    `protobuf:"varint,9,opt,name=max_health,json=maxHealth" json:"max_health,omitempty"`
	MaxShields          *int32    `protobuf:"varint,10,opt,name=max_shields,json=maxShields" json:"max_shields,omitempty"`
	MaxEnergy           *int32    `protobuf:"varint,11,opt,name=max_energy,json=maxEnergy" json:"max_energy,omitempty"`
}

func (x *UnitInfo) Reset() {
	*x = UnitInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ui_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitInfo) ProtoMessage() {}

func (x *UnitInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ui_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitInfo.ProtoReflect.Descriptor instead.
func (*UnitInfo) Descriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{2}
}

func (x *UnitInfo) GetUnitType() uint32 {
	if x != nil && x.UnitType != nil {
		return *x.UnitType
	}
	return 0
}

func (x *UnitInfo) GetPlayerRelative() uint32 {
	if x != nil && x.PlayerRelative != nil {
		return *x.PlayerRelative
	}
	return 0
}

func (x *UnitInfo) GetHealth() int32 {
	if x != nil && x.Health != nil {
		return *x.Health
	}
	return 0
}

func (x *UnitInfo) GetShields() int32 {
	if x != nil && x.Shields != nil {
		return *x.Shields
	}
	return 0
}

func (x *UnitInfo) GetEnergy() int32 {
	if x != nil && x.Energy != nil {
		return *x.Energy
	}
	return 0
}

func (x *UnitInfo) GetTransportSlotsTaken() int32 {
	if x != nil && x.TransportSlotsTaken != nil {
		return *x.TransportSlotsTaken
	}
	return 0
}

func (x *UnitInfo) GetBuildProgress() float32 {
	if x != nil && x.BuildProgress != nil {
		return *x.BuildProgress
	}
	return 0
}

func (x *UnitInfo) GetAddOn() *UnitInfo {
	if x != nil {
		return x.AddOn
	}
	return nil
}

func (x *UnitInfo) GetMaxHealth() int32 {
	if x != nil && x.MaxHealth != nil {
		return *x.MaxHealth
	}
	return 0
}

func (x *UnitInfo) GetMaxShields() int32 {
	if x != nil && x.MaxShields != nil {
		return *x.MaxShields
	}
	return 0
}

func (x *UnitInfo) GetMaxEnergy() int32 {
	if x != nil && x.MaxEnergy != nil {
		return *x.MaxEnergy
	}
	return 0
}

type SinglePanel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unit               *UnitInfo `protobuf:"bytes,1,opt,name=unit" json:"unit,omitempty"`
	AttackUpgradeLevel *int32    `protobuf:"varint,2,opt,name=attack_upgrade_level,json=attackUpgradeLevel" json:"attack_upgrade_level,omitempty"`
	ArmorUpgradeLevel  *int32    `protobuf:"varint,3,opt,name=armor_upgrade_level,json=armorUpgradeLevel" json:"armor_upgrade_level,omitempty"`
	ShieldUpgradeLevel *int32    `protobuf:"varint,4,opt,name=shield_upgrade_level,json=shieldUpgradeLevel" json:"shield_upgrade_level,omitempty"`
	Buffs              []int32   `protobuf:"varint,5,rep,name=buffs" json:"buffs,omitempty"`
}

func (x *SinglePanel) Reset() {
	*x = SinglePanel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ui_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SinglePanel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SinglePanel) ProtoMessage() {}

func (x *SinglePanel) ProtoReflect() protoreflect.Message {
	mi := &file_ui_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SinglePanel.ProtoReflect.Descriptor instead.
func (*SinglePanel) Descriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{3}
}

func (x *SinglePanel) GetUnit() *UnitInfo {
	if x != nil {
		return x.Unit
	}
	return nil
}

func (x *SinglePanel) GetAttackUpgradeLevel() int32 {
	if x != nil && x.AttackUpgradeLevel != nil {
		return *x.AttackUpgradeLevel
	}
	return 0
}

func (x *SinglePanel) GetArmorUpgradeLevel() int32 {
	if x != nil && x.ArmorUpgradeLevel != nil {
		return *x.ArmorUpgradeLevel
	}
	return 0
}

func (x *SinglePanel) GetShieldUpgradeLevel() int32 {
	if x != nil && x.ShieldUpgradeLevel != nil {
		return *x.ShieldUpgradeLevel
	}
	return 0
}

func (x *SinglePanel) GetBuffs() []int32 {
	if x != nil {
		return x.Buffs
	}
	return nil
}

type MultiPanel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Units []*UnitInfo `protobuf:"bytes,1,rep,name=units" json:"units,omitempty"`
}

func (x *MultiPanel) Reset() {
	*x = MultiPanel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ui_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiPanel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiPanel) ProtoMessage() {}

func (x *MultiPanel) ProtoReflect() protoreflect.Message {
	mi := &file_ui_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiPanel.ProtoReflect.Descriptor instead.
func (*MultiPanel) Descriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{4}
}

func (x *MultiPanel) GetUnits() []*UnitInfo {
	if x != nil {
		return x.Units
	}
	return nil
}

type CargoPanel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unit           *UnitInfo   `protobuf:"bytes,1,opt,name=unit" json:"unit,omitempty"`
	Passengers     []*UnitInfo `protobuf:"bytes,2,rep,name=passengers" json:"passengers,omitempty"`
	SlotsAvailable *int32      `protobuf:"varint,3,opt,name=slots_available,json=slotsAvailable" json:"slots_available,omitempty"` // TODO: Change to cargo size
}

func (x *CargoPanel) Reset() {
	*x = CargoPanel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ui_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CargoPanel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CargoPanel) ProtoMessage() {}

func (x *CargoPanel) ProtoReflect() protoreflect.Message {
	mi := &file_ui_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CargoPanel.ProtoReflect.Descriptor instead.
func (*CargoPanel) Descriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{5}
}

func (x *CargoPanel) GetUnit() *UnitInfo {
	if x != nil {
		return x.Unit
	}
	return nil
}

func (x *CargoPanel) GetPassengers() []*UnitInfo {
	if x != nil {
		return x.Passengers
	}
	return nil
}

func (x *CargoPanel) GetSlotsAvailable() int32 {
	if x != nil && x.SlotsAvailable != nil {
		return *x.SlotsAvailable
	}
	return 0
}

type BuildItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbilityId     *uint32  `protobuf:"varint,1,opt,name=ability_id,json=abilityId" json:"ability_id,omitempty"`
	BuildProgress *float32 `protobuf:"fixed32,2,opt,name=build_progress,json=buildProgress" json:"build_progress,omitempty"` // Range: [0.0, 1.0]
}

func (x *BuildItem) Reset() {
	*x = BuildItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ui_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildItem) ProtoMessage() {}

func (x *BuildItem) ProtoReflect() protoreflect.Message {
	mi := &file_ui_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildItem.ProtoReflect.Descriptor instead.
func (*BuildItem) Descriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{6}
}

func (x *BuildItem) GetAbilityId() uint32 {
	if x != nil && x.AbilityId != nil {
		return *x.AbilityId
	}
	return 0
}

func (x *BuildItem) GetBuildProgress() float32 {
	if x != nil && x.BuildProgress != nil {
		return *x.BuildProgress
	}
	return 0
}

type ProductionPanel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unit *UnitInfo `protobuf:"bytes,1,opt,name=unit" json:"unit,omitempty"`
	// build_queue ONLY gives information about units that are being produced.
	// Use production_queue instead to see both units being trained as well as research in the queue.
	BuildQueue      []*UnitInfo  `protobuf:"bytes,2,rep,name=build_queue,json=buildQueue" json:"build_queue,omitempty"`
	ProductionQueue []*BuildItem `protobuf:"bytes,3,rep,name=production_queue,json=productionQueue" json:"production_queue,omitempty"`
}

func (x *ProductionPanel) Reset() {
	*x = ProductionPanel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ui_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductionPanel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductionPanel) ProtoMessage() {}

func (x *ProductionPanel) ProtoReflect() protoreflect.Message {
	mi := &file_ui_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductionPanel.ProtoReflect.Descriptor instead.
func (*ProductionPanel) Descriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{7}
}

func (x *ProductionPanel) GetUnit() *UnitInfo {
	if x != nil {
		return x.Unit
	}
	return nil
}

func (x *ProductionPanel) GetBuildQueue() []*UnitInfo {
	if x != nil {
		return x.BuildQueue
	}
	return nil
}

func (x *ProductionPanel) GetProductionQueue() []*BuildItem {
	if x != nil {
		return x.ProductionQueue
	}
	return nil
}

type ActionUI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//	*ActionUI_ControlGroup
	//	*ActionUI_SelectArmy
	//	*ActionUI_SelectWarpGates
	//	*ActionUI_SelectLarva
	//	*ActionUI_SelectIdleWorker
	//	*ActionUI_MultiPanel
	//	*ActionUI_CargoPanel
	//	*ActionUI_ProductionPanel
	//	*ActionUI_ToggleAutocast
	Action isActionUI_Action `protobuf_oneof:"action"`
}

func (x *ActionUI) Reset() {
	*x = ActionUI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ui_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionUI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionUI) ProtoMessage() {}

func (x *ActionUI) ProtoReflect() protoreflect.Message {
	mi := &file_ui_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionUI.ProtoReflect.Descriptor instead.
func (*ActionUI) Descriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{8}
}

func (m *ActionUI) GetAction() isActionUI_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *ActionUI) GetControlGroup() *ActionControlGroup {
	if x, ok := x.GetAction().(*ActionUI_ControlGroup); ok {
		return x.ControlGroup
	}
	return nil
}

func (x *ActionUI) GetSelectArmy() *ActionSelectArmy {
	if x, ok := x.GetAction().(*ActionUI_SelectArmy); ok {
		return x.SelectArmy
	}
	return nil
}

func (x *ActionUI) GetSelectWarpGates() *ActionSelectWarpGates {
	if x, ok := x.GetAction().(*ActionUI_SelectWarpGates); ok {
		return x.SelectWarpGates
	}
	return nil
}

func (x *ActionUI) GetSelectLarva() *ActionSelectLarva {
	if x, ok := x.GetAction().(*ActionUI_SelectLarva); ok {
		return x.SelectLarva
	}
	return nil
}

func (x *ActionUI) GetSelectIdleWorker() *ActionSelectIdleWorker {
	if x, ok := x.GetAction().(*ActionUI_SelectIdleWorker); ok {
		return x.SelectIdleWorker
	}
	return nil
}

func (x *ActionUI) GetMultiPanel() *ActionMultiPanel {
	if x, ok := x.GetAction().(*ActionUI_MultiPanel); ok {
		return x.MultiPanel
	}
	return nil
}

func (x *ActionUI) GetCargoPanel() *ActionCargoPanelUnload {
	if x, ok := x.GetAction().(*ActionUI_CargoPanel); ok {
		return x.CargoPanel
	}
	return nil
}

func (x *ActionUI) GetProductionPanel() *ActionProductionPanelRemoveFromQueue {
	if x, ok := x.GetAction().(*ActionUI_ProductionPanel); ok {
		return x.ProductionPanel
	}
	return nil
}

func (x *ActionUI) GetToggleAutocast() *ActionToggleAutocast {
	if x, ok := x.GetAction().(*ActionUI_ToggleAutocast); ok {
		return x.ToggleAutocast
	}
	return nil
}

type isActionUI_Action interface {
	isActionUI_Action()
}

type ActionUI_ControlGroup struct {
	ControlGroup *ActionControlGroup `protobuf:"bytes,1,opt,name=control_group,json=controlGroup,oneof"`
}

type ActionUI_SelectArmy struct {
	SelectArmy *ActionSelectArmy `protobuf:"bytes,2,opt,name=select_army,json=selectArmy,oneof"`
}

type ActionUI_SelectWarpGates struct {
	SelectWarpGates *ActionSelectWarpGates `protobuf:"bytes,3,opt,name=select_warp_gates,json=selectWarpGates,oneof"`
}

type ActionUI_SelectLarva struct {
	SelectLarva *ActionSelectLarva `protobuf:"bytes,4,opt,name=select_larva,json=selectLarva,oneof"`
}

type ActionUI_SelectIdleWorker struct {
	SelectIdleWorker *ActionSelectIdleWorker `protobuf:"bytes,5,opt,name=select_idle_worker,json=selectIdleWorker,oneof"`
}

type ActionUI_MultiPanel struct {
	MultiPanel *ActionMultiPanel `protobuf:"bytes,6,opt,name=multi_panel,json=multiPanel,oneof"`
}

type ActionUI_CargoPanel struct {
	CargoPanel *ActionCargoPanelUnload `protobuf:"bytes,7,opt,name=cargo_panel,json=cargoPanel,oneof"`
}

type ActionUI_ProductionPanel struct {
	ProductionPanel *ActionProductionPanelRemoveFromQueue `protobuf:"bytes,8,opt,name=production_panel,json=productionPanel,oneof"`
}

type ActionUI_ToggleAutocast struct {
	ToggleAutocast *ActionToggleAutocast `protobuf:"bytes,9,opt,name=toggle_autocast,json=toggleAutocast,oneof"`
}

func (*ActionUI_ControlGroup) isActionUI_Action() {}

func (*ActionUI_SelectArmy) isActionUI_Action() {}

func (*ActionUI_SelectWarpGates) isActionUI_Action() {}

func (*ActionUI_SelectLarva) isActionUI_Action() {}

func (*ActionUI_SelectIdleWorker) isActionUI_Action() {}

func (*ActionUI_MultiPanel) isActionUI_Action() {}

func (*ActionUI_CargoPanel) isActionUI_Action() {}

func (*ActionUI_ProductionPanel) isActionUI_Action() {}

func (*ActionUI_ToggleAutocast) isActionUI_Action() {}

type ActionControlGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action            *ActionControlGroup_ControlGroupAction `protobuf:"varint,1,opt,name=action,enum=sc2proto.ActionControlGroup_ControlGroupAction" json:"action,omitempty"`
	ControlGroupIndex *uint32                                `protobuf:"varint,2,opt,name=control_group_index,json=controlGroupIndex" json:"control_group_index,omitempty"`
}

func (x *ActionControlGroup) Reset() {
	*x = ActionControlGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ui_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionControlGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionControlGroup) ProtoMessage() {}

func (x *ActionControlGroup) ProtoReflect() protoreflect.Message {
	mi := &file_ui_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionControlGroup.ProtoReflect.Descriptor instead.
func (*ActionControlGroup) Descriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{9}
}

func (x *ActionControlGroup) GetAction() ActionControlGroup_ControlGroupAction {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ActionControlGroup_Recall
}

func (x *ActionControlGroup) GetControlGroupIndex() uint32 {
	if x != nil && x.ControlGroupIndex != nil {
		return *x.ControlGroupIndex
	}
	return 0
}

type ActionSelectArmy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelectionAdd *bool `protobuf:"varint,1,opt,name=selection_add,json=selectionAdd" json:"selection_add,omitempty"`
}

func (x *ActionSelectArmy) Reset() {
	*x = ActionSelectArmy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ui_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionSelectArmy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionSelectArmy) ProtoMessage() {}

func (x *ActionSelectArmy) ProtoReflect() protoreflect.Message {
	mi := &file_ui_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionSelectArmy.ProtoReflect.Descriptor instead.
func (*ActionSelectArmy) Descriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{10}
}

func (x *ActionSelectArmy) GetSelectionAdd() bool {
	if x != nil && x.SelectionAdd != nil {
		return *x.SelectionAdd
	}
	return false
}

type ActionSelectWarpGates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelectionAdd *bool `protobuf:"varint,1,opt,name=selection_add,json=selectionAdd" json:"selection_add,omitempty"`
}

func (x *ActionSelectWarpGates) Reset() {
	*x = ActionSelectWarpGates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ui_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionSelectWarpGates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionSelectWarpGates) ProtoMessage() {}

func (x *ActionSelectWarpGates) ProtoReflect() protoreflect.Message {
	mi := &file_ui_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionSelectWarpGates.ProtoReflect.Descriptor instead.
func (*ActionSelectWarpGates) Descriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{11}
}

func (x *ActionSelectWarpGates) GetSelectionAdd() bool {
	if x != nil && x.SelectionAdd != nil {
		return *x.SelectionAdd
	}
	return false
}

type ActionSelectLarva struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ActionSelectLarva) Reset() {
	*x = ActionSelectLarva{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ui_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionSelectLarva) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionSelectLarva) ProtoMessage() {}

func (x *ActionSelectLarva) ProtoReflect() protoreflect.Message {
	mi := &file_ui_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionSelectLarva.ProtoReflect.Descriptor instead.
func (*ActionSelectLarva) Descriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{12}
}

type ActionSelectIdleWorker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *ActionSelectIdleWorker_Type `protobuf:"varint,1,opt,name=type,enum=sc2proto.ActionSelectIdleWorker_Type" json:"type,omitempty"`
}

func (x *ActionSelectIdleWorker) Reset() {
	*x = ActionSelectIdleWorker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ui_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionSelectIdleWorker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionSelectIdleWorker) ProtoMessage() {}

func (x *ActionSelectIdleWorker) ProtoReflect() protoreflect.Message {
	mi := &file_ui_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionSelectIdleWorker.ProtoReflect.Descriptor instead.
func (*ActionSelectIdleWorker) Descriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{13}
}

func (x *ActionSelectIdleWorker) GetType() ActionSelectIdleWorker_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ActionSelectIdleWorker_Set
}

type ActionMultiPanel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      *ActionMultiPanel_Type `protobuf:"varint,1,opt,name=type,enum=sc2proto.ActionMultiPanel_Type" json:"type,omitempty"`
	UnitIndex *int32                 `protobuf:"varint,2,opt,name=unit_index,json=unitIndex" json:"unit_index,omitempty"`
}

func (x *ActionMultiPanel) Reset() {
	*x = ActionMultiPanel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ui_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionMultiPanel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionMultiPanel) ProtoMessage() {}

func (x *ActionMultiPanel) ProtoReflect() protoreflect.Message {
	mi := &file_ui_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionMultiPanel.ProtoReflect.Descriptor instead.
func (*ActionMultiPanel) Descriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{14}
}

func (x *ActionMultiPanel) GetType() ActionMultiPanel_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ActionMultiPanel_SingleSelect
}

func (x *ActionMultiPanel) GetUnitIndex() int32 {
	if x != nil && x.UnitIndex != nil {
		return *x.UnitIndex
	}
	return 0
}

type ActionCargoPanelUnload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitIndex *int32 `protobuf:"varint,1,opt,name=unit_index,json=unitIndex" json:"unit_index,omitempty"`
}

func (x *ActionCargoPanelUnload) Reset() {
	*x = ActionCargoPanelUnload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ui_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionCargoPanelUnload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionCargoPanelUnload) ProtoMessage() {}

func (x *ActionCargoPanelUnload) ProtoReflect() protoreflect.Message {
	mi := &file_ui_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionCargoPanelUnload.ProtoReflect.Descriptor instead.
func (*ActionCargoPanelUnload) Descriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{15}
}

func (x *ActionCargoPanelUnload) GetUnitIndex() int32 {
	if x != nil && x.UnitIndex != nil {
		return *x.UnitIndex
	}
	return 0
}

type ActionProductionPanelRemoveFromQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitIndex *int32 `protobuf:"varint,1,opt,name=unit_index,json=unitIndex" json:"unit_index,omitempty"`
}

func (x *ActionProductionPanelRemoveFromQueue) Reset() {
	*x = ActionProductionPanelRemoveFromQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ui_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionProductionPanelRemoveFromQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionProductionPanelRemoveFromQueue) ProtoMessage() {}

func (x *ActionProductionPanelRemoveFromQueue) ProtoReflect() protoreflect.Message {
	mi := &file_ui_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionProductionPanelRemoveFromQueue.ProtoReflect.Descriptor instead.
func (*ActionProductionPanelRemoveFromQueue) Descriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{16}
}

func (x *ActionProductionPanelRemoveFromQueue) GetUnitIndex() int32 {
	if x != nil && x.UnitIndex != nil {
		return *x.UnitIndex
	}
	return 0
}

type ActionToggleAutocast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbilityId *int32 `protobuf:"varint,1,opt,name=ability_id,json=abilityId" json:"ability_id,omitempty"`
}

func (x *ActionToggleAutocast) Reset() {
	*x = ActionToggleAutocast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ui_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionToggleAutocast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionToggleAutocast) ProtoMessage() {}

func (x *ActionToggleAutocast) ProtoReflect() protoreflect.Message {
	mi := &file_ui_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionToggleAutocast.ProtoReflect.Descriptor instead.
func (*ActionToggleAutocast) Descriptor() ([]byte, []int) {
	return file_ui_proto_rawDescGZIP(), []int{17}
}

func (x *ActionToggleAutocast) GetAbilityId() int32 {
	if x != nil && x.AbilityId != nil {
		return *x.AbilityId
	}
	return 0
}

var File_ui_proto protoreflect.FileDescriptor

var file_ui_proto_rawDesc = []byte{
	0x0a, 0x08, 0x75, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x63, 0x32, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x02, 0x0a, 0x0d, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x49, 0x12, 0x2e, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x63, 0x32, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x63, 0x32, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x63, 0x32, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x05,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x2c, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x63, 0x32, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x61, 0x72, 0x67, 0x6f, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x63, 0x61,
	0x72, 0x67, 0x6f, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x63, 0x32, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x6e,
	0x65, 0x6c, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x07, 0x0a, 0x05, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x22, 0x7e, 0x0a, 0x0c, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xff, 0x02, 0x0a, 0x08, 0x55, 0x6e,
	0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x5f, 0x74, 0x61, 0x6b, 0x65, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x6c, 0x6f, 0x74, 0x73, 0x54, 0x61, 0x6b, 0x65, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x29, 0x0a, 0x06, 0x61, 0x64, 0x64, 0x5f, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x63, 0x32, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x69,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x61, 0x64, 0x64, 0x4f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x61, 0x78, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x6d, 0x61, 0x78, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x61, 0x78, 0x5f, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x6d, 0x61, 0x78, 0x53, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x61, 0x78, 0x5f, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x6d, 0x61, 0x78, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x22, 0xdf, 0x01, 0x0a, 0x0b,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x04, 0x75,
	0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x63, 0x32, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75,
	0x6e, 0x69, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x12, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x5f, 0x75,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x11, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x12, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x66, 0x66, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x62, 0x75, 0x66, 0x66, 0x73, 0x22, 0x36, 0x0a,
	0x0a, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x05, 0x75,
	0x6e, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x63, 0x32,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x75, 0x6e, 0x69, 0x74, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x50,
	0x61, 0x6e, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x63, 0x32, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e,
	0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x32, 0x0a, 0x0a,
	0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x73, 0x63, 0x32, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x69, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x73,
	0x12, 0x27, 0x0a, 0x0f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x6c, 0x6f, 0x74, 0x73,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x51, 0x0a, 0x09, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0xae, 0x01, 0x0a,
	0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x6e, 0x65, 0x6c,
	0x12, 0x26, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x63, 0x32, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x33, 0x0a, 0x0b, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x73, 0x63, 0x32, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x3e, 0x0a,
	0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x63, 0x32, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x22, 0xa7, 0x05,
	0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x49, 0x12, 0x43, 0x0a, 0x0d, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x63, 0x32, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48,
	0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x3d, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x72, 0x6d, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x63, 0x32, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x72, 0x6d, 0x79,
	0x48, 0x00, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x72, 0x6d, 0x79, 0x12, 0x4d,
	0x0a, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x77, 0x61, 0x72, 0x70, 0x5f, 0x67, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x63, 0x32, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x57, 0x61, 0x72, 0x70, 0x47, 0x61, 0x74, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x57, 0x61, 0x72, 0x70, 0x47, 0x61, 0x74, 0x65, 0x73, 0x12, 0x40, 0x0a,
	0x0c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x6c, 0x61, 0x72, 0x76, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x63, 0x32, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x61, 0x72, 0x76, 0x61,
	0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x61, 0x72, 0x76, 0x61, 0x12,
	0x50, 0x0a, 0x12, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x6c, 0x65, 0x5f, 0x77,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x63,
	0x32, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x10, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x64, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x12, 0x3d, 0x0a, 0x0b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x63, 0x32, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e,
	0x65, 0x6c, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e, 0x65, 0x6c,
	0x12, 0x43, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x63, 0x32, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x50, 0x61, 0x6e, 0x65,
	0x6c, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x67, 0x6f,
	0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x5b, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x73, 0x63, 0x32, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x6e, 0x65, 0x6c,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x48,
	0x00, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x6e,
	0x65, 0x6c, 0x12, 0x49, 0x0a, 0x0f, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74,
	0x6f, 0x63, 0x61, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x63,
	0x32, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x67,
	0x67, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x63, 0x61, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x74,
	0x6f, 0x67, 0x67, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x63, 0x61, 0x73, 0x74, 0x42, 0x08, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe9, 0x01, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x47,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f,
	0x2e, 0x73, 0x63, 0x32, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x5a, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x0a,
	0x06, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x65, 0x74,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x10, 0x03, 0x12, 0x0f,
	0x0a, 0x0b, 0x53, 0x65, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x65, 0x61, 0x6c, 0x10, 0x04, 0x12,
	0x12, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x65, 0x61,
	0x6c, 0x10, 0x05, 0x22, 0x37, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x41, 0x72, 0x6d, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x22, 0x3c, 0x0a, 0x15,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x57, 0x61, 0x72, 0x70,
	0x47, 0x61, 0x74, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x61, 0x72, 0x76, 0x61, 0x22,
	0x82, 0x01, 0x0a, 0x16, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x73, 0x63, 0x32, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x2d, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a,
	0x03, 0x53, 0x65, 0x74, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x10, 0x02, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x64, 0x64, 0x41,
	0x6c, 0x6c, 0x10, 0x04, 0x22, 0xbe, 0x01, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x63, 0x32, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x56, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x65, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x41, 0x6c, 0x6c, 0x4f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x10, 0x03, 0x12, 0x15,
	0x0a, 0x11, 0x44, 0x65, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x6c, 0x4f, 0x66, 0x54,
	0x79, 0x70, 0x65, 0x10, 0x04, 0x22, 0x37, 0x0a, 0x16, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x61, 0x72, 0x67, 0x6f, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x45,
	0x0a, 0x24, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x35, 0x0a, 0x14, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x6f, 0x67, 0x67, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x63, 0x61, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x42, 0x2c, 0x5a, 0x2a,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x69, 0x6e, 0x77, 0x75,
	0x7a, 0x68, 0x61, 0x6f, 0x2f, 0x73, 0x63, 0x32, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2d, 0x67,
	0x6f, 0x2f, 0x73, 0x63, 0x32, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_ui_proto_rawDescOnce sync.Once
	file_ui_proto_rawDescData = file_ui_proto_rawDesc
)

func file_ui_proto_rawDescGZIP() []byte {
	file_ui_proto_rawDescOnce.Do(func() {
		file_ui_proto_rawDescData = protoimpl.X.CompressGZIP(file_ui_proto_rawDescData)
	})
	return file_ui_proto_rawDescData
}

var file_ui_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_ui_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_ui_proto_goTypes = []interface{}{
	(ActionControlGroup_ControlGroupAction)(0),   // 0: sc2proto.ActionControlGroup.ControlGroupAction
	(ActionSelectIdleWorker_Type)(0),             // 1: sc2proto.ActionSelectIdleWorker.Type
	(ActionMultiPanel_Type)(0),                   // 2: sc2proto.ActionMultiPanel.Type
	(*ObservationUI)(nil),                        // 3: sc2proto.ObservationUI
	(*ControlGroup)(nil),                         // 4: sc2proto.ControlGroup
	(*UnitInfo)(nil),                             // 5: sc2proto.UnitInfo
	(*SinglePanel)(nil),                          // 6: sc2proto.SinglePanel
	(*MultiPanel)(nil),                           // 7: sc2proto.MultiPanel
	(*CargoPanel)(nil),                           // 8: sc2proto.CargoPanel
	(*BuildItem)(nil),                            // 9: sc2proto.BuildItem
	(*ProductionPanel)(nil),                      // 10: sc2proto.ProductionPanel
	(*ActionUI)(nil),                             // 11: sc2proto.ActionUI
	(*ActionControlGroup)(nil),                   // 12: sc2proto.ActionControlGroup
	(*ActionSelectArmy)(nil),                     // 13: sc2proto.ActionSelectArmy
	(*ActionSelectWarpGates)(nil),                // 14: sc2proto.ActionSelectWarpGates
	(*ActionSelectLarva)(nil),                    // 15: sc2proto.ActionSelectLarva
	(*ActionSelectIdleWorker)(nil),               // 16: sc2proto.ActionSelectIdleWorker
	(*ActionMultiPanel)(nil),                     // 17: sc2proto.ActionMultiPanel
	(*ActionCargoPanelUnload)(nil),               // 18: sc2proto.ActionCargoPanelUnload
	(*ActionProductionPanelRemoveFromQueue)(nil), // 19: sc2proto.ActionProductionPanelRemoveFromQueue
	(*ActionToggleAutocast)(nil),                 // 20: sc2proto.ActionToggleAutocast
}
var file_ui_proto_depIdxs = []int32{
	4,  // 0: sc2proto.ObservationUI.groups:type_name -> sc2proto.ControlGroup
	6,  // 1: sc2proto.ObservationUI.single:type_name -> sc2proto.SinglePanel
	7,  // 2: sc2proto.ObservationUI.multi:type_name -> sc2proto.MultiPanel
	8,  // 3: sc2proto.ObservationUI.cargo:type_name -> sc2proto.CargoPanel
	10, // 4: sc2proto.ObservationUI.production:type_name -> sc2proto.ProductionPanel
	5,  // 5: sc2proto.UnitInfo.add_on:type_name -> sc2proto.UnitInfo
	5,  // 6: sc2proto.SinglePanel.unit:type_name -> sc2proto.UnitInfo
	5,  // 7: sc2proto.MultiPanel.units:type_name -> sc2proto.UnitInfo
	5,  // 8: sc2proto.CargoPanel.unit:type_name -> sc2proto.UnitInfo
	5,  // 9: sc2proto.CargoPanel.passengers:type_name -> sc2proto.UnitInfo
	5,  // 10: sc2proto.ProductionPanel.unit:type_name -> sc2proto.UnitInfo
	5,  // 11: sc2proto.ProductionPanel.build_queue:type_name -> sc2proto.UnitInfo
	9,  // 12: sc2proto.ProductionPanel.production_queue:type_name -> sc2proto.BuildItem
	12, // 13: sc2proto.ActionUI.control_group:type_name -> sc2proto.ActionControlGroup
	13, // 14: sc2proto.ActionUI.select_army:type_name -> sc2proto.ActionSelectArmy
	14, // 15: sc2proto.ActionUI.select_warp_gates:type_name -> sc2proto.ActionSelectWarpGates
	15, // 16: sc2proto.ActionUI.select_larva:type_name -> sc2proto.ActionSelectLarva
	16, // 17: sc2proto.ActionUI.select_idle_worker:type_name -> sc2proto.ActionSelectIdleWorker
	17, // 18: sc2proto.ActionUI.multi_panel:type_name -> sc2proto.ActionMultiPanel
	18, // 19: sc2proto.ActionUI.cargo_panel:type_name -> sc2proto.ActionCargoPanelUnload
	19, // 20: sc2proto.ActionUI.production_panel:type_name -> sc2proto.ActionProductionPanelRemoveFromQueue
	20, // 21: sc2proto.ActionUI.toggle_autocast:type_name -> sc2proto.ActionToggleAutocast
	0,  // 22: sc2proto.ActionControlGroup.action:type_name -> sc2proto.ActionControlGroup.ControlGroupAction
	1,  // 23: sc2proto.ActionSelectIdleWorker.type:type_name -> sc2proto.ActionSelectIdleWorker.Type
	2,  // 24: sc2proto.ActionMultiPanel.type:type_name -> sc2proto.ActionMultiPanel.Type
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_ui_proto_init() }
func file_ui_proto_init() {
	if File_ui_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ui_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObservationUI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ui_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ui_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ui_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SinglePanel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ui_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiPanel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ui_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CargoPanel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ui_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ui_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductionPanel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ui_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionUI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ui_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionControlGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ui_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionSelectArmy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ui_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionSelectWarpGates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ui_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionSelectLarva); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ui_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionSelectIdleWorker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ui_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionMultiPanel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ui_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionCargoPanelUnload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ui_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionProductionPanelRemoveFromQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ui_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionToggleAutocast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ui_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ObservationUI_Single)(nil),
		(*ObservationUI_Multi)(nil),
		(*ObservationUI_Cargo)(nil),
		(*ObservationUI_Production)(nil),
	}
	file_ui_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*ActionUI_ControlGroup)(nil),
		(*ActionUI_SelectArmy)(nil),
		(*ActionUI_SelectWarpGates)(nil),
		(*ActionUI_SelectLarva)(nil),
		(*ActionUI_SelectIdleWorker)(nil),
		(*ActionUI_MultiPanel)(nil),
		(*ActionUI_CargoPanel)(nil),
		(*ActionUI_ProductionPanel)(nil),
		(*ActionUI_ToggleAutocast)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ui_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ui_proto_goTypes,
		DependencyIndexes: file_ui_proto_depIdxs,
		EnumInfos:         file_ui_proto_enumTypes,
		MessageInfos:      file_ui_proto_msgTypes,
	}.Build()
	File_ui_proto = out.File
	file_ui_proto_rawDesc = nil
	file_ui_proto_goTypes = nil
	file_ui_proto_depIdxs = nil
}
